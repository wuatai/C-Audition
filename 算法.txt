课程目标：
让大家在面对面试中的算法问题时，有一个合理思考路径；
面对算法面试，不畏惧。因为面试中的算法问题，通常并不复杂，远远不需要啃完一本《算法导论》

第一章、算法面试到底是什么鬼？
1-1	算法面试不仅仅是正确的回答问题
	算法面试是什么？
	答：不代表能够正确回答每一个算法问题，但是合理的思考方向其实更重要，也是完成算法面试问题的前提。
		算法面试优秀并不意味着技术面试优秀，技术面试优秀并不意味着能够拿到offer。
	什么是给出一个合理的思考路径？
	答：算法面试的目的不是给出一个“正确”答案，而是向面试官展示你思考问题的方式。
	
1-2	算法面试只是面试的一部分
	自己简历中的项目中梳理一下技术要点。
	你遇到的印象最深的bug是什么？
	面向对象
	设计模式
	网络相关、安全相关、内存相关、并发相关。
	遇到的最大的挑战？
	犯过的错误？
	遭遇的失败？
	最享受的工作内容？
	遇到冲突的处理方式？
	做的最与众不同的事儿？
	准备好合适的问题文面试官？
	注意：面试官问这些问题一定要用结合具体的项目来回答。
	准备好合适的问题问面试官，比如：
		整个小组的大概运行模式是怎样的？
		整个项目后续规划是如何的？
		这个产品的某个问题是如何解决的？
		为什么会选择某些技术？标准？
		我对某个技术很感兴趣，在你的小组中我会有怎样的机会深入了解这项技术。
1-3	如何准备算法面试
	1.远远不需要啃完一本《算法导论》，因为它强调理论证明。
	2.高级数据结构和算法面试提及概率很低。（了解，不需要实现）
		比如：红黑树、B-Tree、斐波那契堆、计算几何、数论、FFT
	3.不要轻视基础算法和数据结构，而只关注“有意思”的题目。
	--各种排序算法
	--基础数据结构和算法的实现：如堆、二叉树、图
	--基础数据结构的使用：如链表、栈、队列、哈希表、图、Trie、并查集...
	--基础算法：深度优先、广度优先、二分查找、递归...
	--基本算法思想：递归、分治、回溯、贪心、动态规划。
	
1-4	如何回答算法面试问题

第二章、面试中的复杂度分析
2-1	究竟什么是大O（Big O）
2-2 对数据规模有一个概念
2-3